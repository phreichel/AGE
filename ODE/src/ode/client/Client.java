//*************************************************************************************************
package ode.client;
//*************************************************************************************************

import ode.schedule.Scheduler;

//*************************************************************************************************
public class Client implements Runnable {

	//=============================================================================================
	private Scheduler scheduler = new Scheduler();
	private Platform platform = new Platform();
	//=============================================================================================

	//=============================================================================================
	private Runstate runstate = Runstate.INITIALIZING;
	//=============================================================================================
	
	//=============================================================================================
	public void run() {		
		scheduler.add(1000000000L / 60L, (n,p) -> platform.update());
		scheduler.init();
		platform.init();
		runstate = Runstate.RUNNING;
		while (runstate == Runstate.RUNNING) {
			scheduler.update();
			Thread.yield();
		}
		platform.done();
		runstate = Runstate.TERMINATED;
	}
	//=============================================================================================

	//=============================================================================================
	public boolean terminate() {
		runstate = Runstate.TERMINATING;
		return true;
	}
	//=============================================================================================
	
}
//*************************************************************************************************
