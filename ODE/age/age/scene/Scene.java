/*
 * Commit: 79126a233e35010f5ee69ea22119499909797737
 * Date: 2023-09-27 16:31:28+02:00
 * Author: pre7618
 * Comment: Added Camview and Rig
 *
 * Commit: 2c0280077398a4634180c45fd2854627002dba37
 * Date: 2023-09-26 23:59:37+02:00
 * Author: Philip Reichel
 * Comment: ...
 *
 * Commit: 4e914ceff796e6e44fd96c76252c68c7325e64cd
 * Date: 2023-09-25 01:23:31+02:00
 * Author: Philip Reichel
 * Comment: ...
 *
 * Commit: 4ba52177b03c84982e184472f4e51a9157e9a67f
 * Date: 2023-09-21 20:15:06+02:00
 * Author: Philip Reichel
 * Comment: Cleaning all up
 *
 * Commit: efba03d014f9f8690fc57eb3949bb36f7ed2e269
 * Date: 2023-09-19 07:28:45+02:00
 * Author: Philip Reichel
 * Comment: todo tasks
 *
 * Commit: 28615d0198d72bb1e1667c0113a594237068a89d
 * Date: 2023-09-18 16:25:09+02:00
 * Author: pre7618
 * Comment: Added Scene Nodes
 *
 * Commit: f3bbe83125092b4a8cf308c82455a7fd16ccf366
 * Date: 2023-09-18 03:05:37+02:00
 * Author: Philip Reichel
 * Comment: Stuff
 *
 */

//*************************************************************************************************
package age.scene;
//*************************************************************************************************

import age.input.Events;
import age.port.Port;

//*************************************************************************************************
public class Scene {

	//=============================================================================================
	private Node root = new Node();
	private Node camera = null;
	//=============================================================================================

	//=============================================================================================
	private Renderer renderer = new Renderer(this);
	private Animator animator = new Animator();
	private FreeCamController freeCamController = new FreeCamController();
	//=============================================================================================
	
	//=============================================================================================
	public void assign(Port port) {
		port.add(renderer);
	}
	//=============================================================================================

	//=============================================================================================
	public void assign(Events events) {
		freeCamController.assign(events);
	}
	//=============================================================================================

	//=============================================================================================
	public Animator animator() {
		return animator;
	}
	//=============================================================================================

	//=============================================================================================
	public FreeCamController freeCamController() {
		return freeCamController;
	}
	//=============================================================================================
	
	//=============================================================================================
	public Node root() {
		return root;
	}
	//=============================================================================================

	//=============================================================================================
	public Node camera() {
		return camera;
	}
	//=============================================================================================

	//=============================================================================================
	public void camera(Node camera) {
		this.camera = camera;
	}
	//=============================================================================================

	//=============================================================================================
	public void update(float dT) {
		animator.update(dT);
		freeCamController.update(dT);
	}
	//=============================================================================================
	
}
//*************************************************************************************************
