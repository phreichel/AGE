//*************************************************************************************************
package age.clock;
//*************************************************************************************************

//*************************************************************************************************
class Alarm {

	//=============================================================================================
	private long nanoperiod;
	private Task task;
	private long mark;
	//=============================================================================================

	//=============================================================================================
	Alarm(long nanoperiod, Task task) {
		this.nanoperiod = nanoperiod;
		this.task = task;
	}
	//=============================================================================================
	
	//=============================================================================================
	public void init(long nanotime) {
		mark = nanotime;
	}
	//=============================================================================================
	
	//=============================================================================================
	public void update(long nanotime) {
		long delta = nanotime-mark;
		if (delta >= nanoperiod) {
			long count = delta / nanoperiod;
			long frames = count * nanoperiod;
			mark += frames;
			trigger(
				(int) count,
				(float) frames / 1000000000L);
		}
	}
	//=============================================================================================

	//=============================================================================================
	private void trigger(int count, float dT) {
		task.run(count, nanoperiod, dT);
	}
	//=============================================================================================
	
}
//*************************************************************************************************

