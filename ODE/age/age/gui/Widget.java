//*************************************************************************************************
package age.gui;
//*************************************************************************************************

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.vecmath.Vector2f;
import age.AGEException;

//*************************************************************************************************
public class Widget {

	//=============================================================================================
	private final Vector2f position  = new Vector2f();
	private final Vector2f dimension = new Vector2f();
	//=============================================================================================

	//=============================================================================================
	private Widget parent = null;
	private final List<Widget> children = new ArrayList<>(10);
	private final List<Widget> children_ro = Collections.unmodifiableList(children);	
	//=============================================================================================

	//=============================================================================================
	public float x() {
		return position.x;
	}
	//=============================================================================================

	//=============================================================================================
	public float y() {
		return position.y;
	}
	//=============================================================================================

	//=============================================================================================
	public float width() {
		return dimension.x;
	}
	//=============================================================================================

	//=============================================================================================
	public float height() {
		return dimension.y;
	}
	//=============================================================================================
	
	//=============================================================================================
	public Vector2f position() {
		return position;
	}
	//=============================================================================================

	//=============================================================================================
	public Vector2f dimension() {
		return dimension;
	}
	//=============================================================================================

	//=============================================================================================
	public void position(Vector2f position) {
		this.position.set(position);
	}
	//=============================================================================================

	//=============================================================================================
	public void position(float x, float y) {
		this.position.set(x, y);
	}
	//=============================================================================================

	//=============================================================================================
	public void positionAdd(Vector2f position) {
		this.position.add(position);
	}
	//=============================================================================================

	//=============================================================================================
	public void positionAdd(float x, float y) {
		this.position.x += x;
		this.position.y += y;
	}
	//=============================================================================================
	
	//=============================================================================================
	public void dimension(Vector2f dimension) {
		this.dimension.set(dimension);
	}
	//=============================================================================================

	//=============================================================================================
	public void dimension(float width, float height) {
		this.dimension.set(width, height);
	}
	//=============================================================================================

	//=============================================================================================
	public void dimensionAdd(Vector2f dimension) {
		this.dimension.add(dimension);
	}
	//=============================================================================================

	//=============================================================================================
	public void dimensionAdd(float width, float height) {
		this.dimension.x += width;
		this.dimension.y += height;
	}
	//=============================================================================================

	//=============================================================================================
	public List<Widget> children() {
		return this.children_ro;
	}
	//=============================================================================================

	//=============================================================================================
	public void add(Widget child) {
		if (child.parent != null) throw new AGEException("Parent not NULL");
		children.add(child);
		child.parent = this;
	}
	//=============================================================================================

	//=============================================================================================
	public void add(int idx, Widget child) {
		if (child.parent != null) throw new AGEException("Parent not NULL");
		children.add(idx, child);
		child.parent = this;
	}
	//=============================================================================================

	//=============================================================================================
	public void remove() {
		if (parent == null) throw new AGEException("Parent is NULL");
		parent.children.remove(this);
		parent = null;
	}
	//=============================================================================================
	
}
//*************************************************************************************************
