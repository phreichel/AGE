//*************************************************************************************************
package age.mesh;
//*************************************************************************************************

import java.util.EnumSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;

//*************************************************************************************************
public class Mesh {

	//=============================================================================================
	private static final Builder builder = new Builder();
	private static final Factory factory = new Factory();
	//=============================================================================================
	
	//=============================================================================================
	public static Builder builder(MeshLayer ... layers) {
		return builder.begin(layers);
	}
	//=============================================================================================

	//=============================================================================================
	public static Factory factory() {
		return factory; 
	}
	//=============================================================================================
	
	//=============================================================================================
	final Set<MeshLayer> layers = EnumSet.noneOf(MeshLayer.class);
	//=============================================================================================

	//=============================================================================================
	ElementType types[];
	int[][] indices;
	float[] colors;
	float[] normals;
	float[] textures;
	float[] vertices;
	//=============================================================================================

	//=============================================================================================
	final Map<String, Material>  materials = new HashMap<>();
	final Map<Integer, String> materialMap = new HashMap<>();
	//=============================================================================================

	//=============================================================================================
	private Element element = new Element(this);
	//=============================================================================================
	
	//=============================================================================================
	public int size() {
		return types.length;
	}
	//=============================================================================================

	//=============================================================================================
	public Material getMaterial(int idx) {
		String name = materialMap.get(idx);
		if (name == null) return null;
		Material material = materials.get(name);
		return material;
	}
	//=============================================================================================
	
	//=============================================================================================
	public Element get(int idx) {
		return element.set(idx);
	}
	//=============================================================================================

	//=============================================================================================
	public boolean hasColors() {
		return layers.contains(MeshLayer.COLORS);
	}
	//=============================================================================================

	//=============================================================================================
	public boolean hasNormals() {
		return layers.contains(MeshLayer.NORMALS);
	}
	//=============================================================================================

	//=============================================================================================
	public boolean hasTextures() {
		return layers.contains(MeshLayer.TEXTURES);
	}
	//=============================================================================================
	
}
//*************************************************************************************************
